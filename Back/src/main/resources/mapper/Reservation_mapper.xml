<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fitime.reservation.ReservationDAO">

	<insert id="booking" parameterType="map">
	    INSERT INTO Reservation(
	        user_id,
	        trainer_id,
	        center_id,
	        product_idx,
	        class_idx,
	        date,
	        start_time,
	        end_time
	    ) VALUES (
	        #{user_id},
	        #{trainer_id},
	        #{center_id},
	        #{product_idx},
	        #{class_idx, jdbcType=INTEGER},
	        #{date},
	        #{start_time},
	        #{end_time}
	    )
	</insert>

	<select id="countReservation" resultType="int" parameterType="map">
	    SELECT COUNT(*) 
	    FROM reservation
	    WHERE status = '예약'
	    <if test="class_idx != null">
	        AND class_idx = #{class_idx}
	    </if>
	    <if test="class_idx == null">
	        AND product_idx = #{product_idx}
	    </if>
	</select>
	
	<select id="maxPeople" resultType="int">
		SELECT max_people FROM product WHERE product_idx=#{param1}
	</select>
	
	<select id="pagesByUser" resultType="int">
		SELECT CEIL(COUNT(reservation_idx)/#{param1}) AS pages FROM reservation where user_id = #{param2}
	</select>
	
	<select id="pagesByTrainer" resultType="int">
		SELECT CEIL(COUNT(reservation_idx)/#{param1}) AS pages FROM reservation where trainer_id = #{param2}
	</select>
	
	<select id="pagesByCenter" resultType="int">
		SELECT CEIL(COUNT(reservation_idx)/#{param1}) AS pages FROM reservation where center_id = #{param2}
	</select>
	
	<select id="listUserBooking" resultType="map" parameterType="map">
		SELECT
			r.reservation_idx
			,r.user_id
			,r.trainer_id
			,r.center_id
			,r.product_idx
			,(select p.product_name from product p where r.product_idx = p.product_idx) as product_name
			,r.date
			,r.start_time
			,r.end_time
			,r.status
			,cp.center_name
			,cp.exercise
			,cl.week
			,cl.start_time AS class_start_time
			,cl.end_time AS class_end_time
			,u.name AS trainer_name
		FROM reservation r LEFT JOIN center_profile cp ON r.center_id=cp.center_id
		LEFT JOIN class cl ON r.class_idx=cl.class_idx
		LEFT JOIN user u ON r.trainer_id=u.user_id 
		WHERE r.user_id=#{user_id} AND r.status='예약' AND u.user_level=2
		ORDER BY r.reservation_idx DESC LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<select id="listTrainerBooking" resultType="map" parameterType="map">
		SELECT
			r.reservation_idx
			,r.user_id
			,u.name as user_name
			,u.phone as user_phone
			,r.trainer_id
			,r.center_id
			,r.product_idx
			,p.product_name
			,r.date
			,r.start_time
			,r.end_time
			,r.status
			,CASE
				WHEN c.class_idx IS NOT NULL THEN 'class'
				ELSE '1:1'
			END AS exercise_level
				,c.week
				,c.start_time AS class_start_time
				,c.end_time AS class_end_time
		FROM reservation r
		LEFT JOIN user u ON r.user_id=u.user_id
		INNER JOIN product p ON r.product_idx=p.product_idx 
		LEFT JOIN class c ON r.class_idx=c.class_idx
		WHERE r.trainer_id=#{trainer_id} AND r.status='예약' AND p.status=1 AND p.delete='false'
		ORDER BY r.reservation_idx DESC LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<select id="listCenterBooking" resultType="map" parameterType="map">
		SELECT
			r.reservation_idx
			,r.user_id
			,u.name as user_name
    		,u.phone as user_phone
			,r.trainer_id
			,(select u2.name from user u2 where u2.user_id=r.trainer_id) as trainer_name
			,r.center_id
			,r.product_idx
			,p.product_name
			,r.date
			,r.start_time
			,r.end_time
			,r.status
			,CASE
				WHEN c.class_idx IS NOT NULL THEN 'class'
				ELSE '1:1'
			END AS exercise_level
				,c.week
				,c.start_time AS class_start_time
	    		,c.end_time AS class_end_time
		FROM reservation r
		LEFT JOIN user u ON r.user_id=u.user_id
		LEFT JOIN product p ON r.product_idx=p.product_idx 
		LEFT JOIN class c ON r.class_idx=c.class_idx
		WHERE r.center_id=#{center_id} AND r.status='예약' AND p.status=1 AND p.delete='false'
		ORDER BY r.reservation_idx DESC LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<select id="detailBooking" resultType="map" parameterType="map">
		SELECT
			r.reservation_idx
			,(select name from user where user_id=r.trainer_id) AS trainer_name
			,(select phone from user where user_id=r.trainer_id) AS trainer_phone
			,(select concat('[',group_concat(concat('"',t.tag_name,'"')),']')
			from user_tag ut join tag t on ut.tag_idx=t.tag_idx
			where ut.user_id=r.trainer_id) as tags
			,r.center_id
			,(select center_name from center_profile where center_id=r.center_id) AS center_name
			,(select phone from center_profile where center_id=r.center_id) AS center_phone
			,(select cp.address from center_profile cp where center_id=r.center_id)
			,r.product_idx
		    ,p.product_name
		    ,p.duration
		    ,p.count
		    ,p.expiration_period
		    ,c.class_idx
		    ,c.week
		    ,c.start_time AS class_start_time
		    ,c.end_time AS class_end_time
			,r.date
			,r.start_time
			,r.end_time
			,r.status
		FROM reservation r
		INNER JOIN product p ON r.product_idx=p.product_idx AND p.status=1 AND p.delete='false'
		LEFT JOIN class c ON p.product_idx=c.product_idx
		LEFT JOIN trainer_profile tp ON r.trainer_id=tp.trainer_id
		LEFT JOIN profile_file pf ON r.trainer_id=pf.user_id AND pf.category='프로필'
		WHERE r.user_id=#{user_id} AND r.reservation_idx=#{reservation_idx}
	</select>
	
	<select id="trainerImage" resultType="com.fitime.dto.Profile_fileDTO">
		SELECT profile_file_idx, user_id, file_name, category FROM profile_file WHERE profile_file_idx=#{param1}
	</select>
	
	<update id="updateBooking" parameterType="map">
		UPDATE reservation SET
			trainer_id=#{trainer_id}
			,product_idx=#{product_idx}
			,date=#{date}
			,start_time=#{start_time}
			,end_time=#{end_time}
		WHERE user_id=#{user_id} AND reservation_idx=#{reservation_idx}
	</update>
	
	<update id="cancelBooking" parameterType="map">
		UPDATE reservation SET status='취소' WHERE user_id=#{user_id} AND reservation_idx=#{reservation_idx}
	</update>
	
	<select id="reser_center_info" resultType="com.fitime.dto.CenterRatingDTO" parameterType="String">
	    SELECT
	    	c.*,
	        pf.file_name AS profile_image,
	        (SELECT AVG(r.rating) FROM Review r WHERE r.target_id = c.center_id) AS avg_rating,
	        (SELECT COUNT(r.review_idx) FROM Review r WHERE r.target_id = c.center_id) AS rating_count
	    FROM center_profile c
	    LEFT JOIN profile_file pf
	        ON c.center_id = pf.user_id
	    WHERE c.center_id = #{center_id}
	</select>
	
	<select id="reser_center_product" resultType="com.fitime.dto.ProductDTO" parameterType="String">
		select * from product where center_id = #{center_id}
	</select>
	
	<select id="reser_trainer_info" resultType="com.fitime.dto.TrainerRatingDTO" parameterType="String">
	    SELECT
	        t.*,
	        u.*,
	        pf.file_name AS profile_image,
	        (SELECT AVG(r.rating) FROM Review r WHERE r.target_id = t.trainer_id) AS avg_rating,
	        (SELECT COUNT(r.review_idx) FROM Review r WHERE r.target_id = t.trainer_id) AS rating_count
	    FROM trainer_profile t
	    LEFT JOIN profile_file pf
	        ON t.trainer_id = pf.user_id
	    LEFT JOIN User u
	    	ON t.trainer_id = u.user_id
	    WHERE t.center_idx = #{center_idx}
	</select>
	
	<select id="reser_schedule_info" parameterType="map" resultType="com.fitime.dto.ScheduleDTO">
	    SELECT 
	        s.schedule_idx,
	        s.user_id,
	        s.title,
	        s.content,
	        s.start_date,
	        s.end_date,
	        s.start_time,
	        s.end_time,
	        s.status
	    FROM schedule s
	    WHERE s.status = '휴무'
	      <if test="center_id != null and center_id != '' and trainer_id != null and trainer_id != ''">
	        AND (s.user_id = #{center_id} OR s.user_id = #{trainer_id})
	      </if>
	      <if test="center_id != null and center_id != '' and (trainer_id == null or trainer_id == '')">
	        AND s.user_id = #{center_id}
	      </if>
	      <if test="trainer_id != null and trainer_id != '' and (center_id == null or center_id == '')">
	        AND s.user_id = #{trainer_id}
	      </if>
	</select>
	
	<select id="reser_class_info" resultType="com.fitime.dto.ClassDTO" parameterType="map">
		select * from class where center_id = #{center_id} and trainer_id = #{trainer_id} and product_idx = #{product_idx} 
	</select>
	
	<!-- 시간별 인원 카운트 -->
	<select id="countReservationByTime" resultType="int">
	    SELECT COUNT(*)
	    FROM reservation
	    WHERE class_idx = #{class_idx}
	      AND date = #{date}
	      AND start_time = #{start_time}
	      AND end_time = #{end_time}
	      AND status = '예약'
	</select>
	
	<!-- 날짜별 인원 카운트 (시간 없는 상품) -->
	<select id="countReservationByDate" resultType="int">
	    SELECT COUNT(*)
	    FROM reservation
	    WHERE product_idx = #{product_idx}
	      AND date = #{date}
	      AND (start_time IS NULL OR start_time = '')
	      AND (end_time IS NULL OR end_time = '')
	      AND status = '예약'
	</select>
	
	<select id="countReservationByDateRange" resultType="map">
	  SELECT date, COUNT(*) as cnt
	  FROM reservation
	  WHERE product_idx = #{product_idx}
	    AND date BETWEEN #{start_date} AND #{end_date}
	    AND (class_idx IS NULL OR class_idx = '')
	    AND status = '예약'
	  GROUP BY date
	</select>

</mapper>